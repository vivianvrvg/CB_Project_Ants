x = "Run Number",
y = "Total Steps") +
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
axis.title = element_text(size = 12)
)
# Create plot for "no_pheromones"
plot_without <- ggplot(subset(df, group == "no_pheromones"), aes(x = run, y = total_steps)) +
geom_line(color = "#ff7f0e", size = 1) +  # Orange line
theme_minimal() +
labs(title = "Without Pheromones",
x = "Run Number",
y = "Total steps") +
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
axis.title = element_text(size = 12)
)
# Arrange the two line plots side by side
grid.arrange(plot_with, plot_without, ncol = 2)
# Calculate common y-axis range
y_range <- range(df$total_steps, na.rm = TRUE)
# Create plot for "with_pheromones"
plot_with <- ggplot(subset(df, group == "with_pheromones"), aes(x = run, y = total_steps)) +
geom_line(color = "#1f77b4", size = 1) +  # Blue line
theme_minimal() +
labs(title = "With Pheromones",
x = "Run Number",
y = "Total Steps") +
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
axis.title = element_text(size = 12)
) +
ylim(y_range)
# Create plot for "no_pheromones"
plot_without <- ggplot(subset(df, group == "no_pheromones"), aes(x = run, y = total_steps)) +
geom_line(color = "#ff7f0e", size = 1) +  # Orange line
theme_minimal() +
labs(title = "Without Pheromones",
x = "Run Number",
y = "Total Steps") +
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
axis.title = element_text(size = 12)
) +
ylim(y_range)
# Arrange the two line plots side by side
grid.arrange(plot_with, plot_without, ncol = 2)
# Load the datasets
food_track_with <- read.csv('food_tracking.csv')
food_track_no <- read.csv('food_tracking_no_pheromones.csv')
View(food_track_no)
View(food_track_with)
head(food_track_no)
# Load the datasets
food_track_with <- read.csv('food_tracking_with_pheromones.csv')
food_track_no <- read.csv('food_tracking_no_pheromones.csv')
head(food_track_no)
head(food_track_with)
plot_summary <- summary_stats
print(plot_summary)
boxplot_final <- ggplot(df, aes(x = group, y = total_steps, fill = group)) +
geom_boxplot(alpha = 0.6, outlier.shape = NA) +  # Boxplot without outliers
geom_jitter(width = 0.2, alpha = 0.6, color = "black") +  # Jittered data points
geom_errorbar(data = plot_summary,
aes(x = group,
ymin = mean_total_steps - se_total_steps,
ymax = mean_total_steps + se_total_steps),
inherit.aes = FALSE,  # Ensure it doesn't inherit aesthetics from the global ggplot call
width = 0.2, color = "black") +  # Error bars
geom_point(data = plot_summary,
aes(x = group, y = mean_total_steps),
inherit.aes = FALSE,  # Prevent inherited aesthetics
shape = 23, size = 3, fill = "white") +  # Mean points
theme_minimal() +
labs(title = "Comparison of total steps taken by ant until food depletion with and without pheromones",
x = "Group",
y = "Total steps") +
scale_fill_manual(values = c("with_pheromones" = "#1f77b4", "no_pheromones" = "#ff7f0e")) +  # Colors
theme(
legend.title = element_blank(),
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title = element_text(size = 14)
)
print(boxplot_final)
# Calculate common y-axis range
y_range <- range(df$total_steps, na.rm = TRUE)
# Create plot for "with_pheromones"
plot_with <- ggplot(subset(df, group == "with_pheromones"), aes(x = run, y = total_steps)) +
geom_line(color = "#1f77b4", size = 1) +  # Blue line
theme_minimal() +
labs(title = "With Pheromones",
x = "Run Number",
y = "Total Steps") +
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
axis.title = element_text(size = 12)
) +
ylim(y_range)
# Create plot for "no_pheromones"
plot_without <- ggplot(subset(df, group == "no_pheromones"), aes(x = run, y = total_steps)) +
geom_line(color = "#ff7f0e", size = 1) +  # Orange line
theme_minimal() +
labs(title = "Without Pheromones",
x = "Run Number",
y = "Total Steps") +
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
axis.title = element_text(size = 12)
) +
ylim(y_range)
# Arrange the two line plots side by side
grid.arrange(plot_with, plot_without, ncol = 2)
head(food_track_no)
# Add a column to identify the condition (with or without pheromones)
food_track_with$condition <- "With Pheromones"
food_track_no$condition <- "No Pheromones"
View(food_track_no)
# Combine both datasets into one
df_food_tracking <- bind_rows(food_track_with, food_track_no)
# Plot the remaining food for each run, with pheromones vs no pheromones
ggplot(df_food_tracking, aes(x = after_nr_steps, y = remaining_food, group = run, color = condition)) +
geom_line() +
theme_minimal() +
labs(title = "Remaining Food Over Time by Run",
x = "Time Steps (After Every 100 Steps)",
y = "Remaining Food",
color = "Condition") +
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
axis.title = element_text(size = 12),
legend.title = element_text(size = 12)
)
# Create the plot for "With Pheromones"
plot_with <- ggplot(food_track_with, aes(x = after_nr_steps, y = remaining_food, group = run)) +
geom_line(color = "#1f77b4") +  # Blue line for "With Pheromones"
theme_minimal() +
labs(title = "Remaining Food Over Time (With Pheromones)",
x = "Time Steps (After Every 100 Steps)",
y = "Remaining Food") +
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
axis.title = element_text(size = 12)
)
# Create the plot for "No Pheromones"
plot_without <- ggplot(food_track_no, aes(x = after_nr_steps, y = remaining_food, group = run)) +
geom_line(color = "#ff7f0e") +  # Orange line for "No Pheromones"
theme_minimal() +
labs(title = "Remaining Food Over Time (No Pheromones)",
x = "Time Steps (After Every 100 Steps)",
y = "Remaining Food") +
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
axis.title = element_text(size = 12)
)
# Arrange the two plots side by side
grid.arrange(plot_with, plot_without, ncol = 2)
# Determine the x-axis limits (based on the maximum number of steps in either dataset)
max_steps <- max(max(food_track_with$after_nr_steps), max(food_track_no$after_nr_steps))
# Create the plot for "With Pheromones"
plot_with <- ggplot(food_track_with, aes(x = after_nr_steps, y = remaining_food, group = run)) +
geom_line(color = "#1f77b4") +  # Blue line for "With Pheromones"
theme_minimal() +
labs(title = "Remaining Food Over Time (With Pheromones)",
x = "Time Steps (After Every 100 Steps)",
y = "Remaining Food") +
scale_x_continuous(limits = c(0, max_steps)) +  # Set the x-axis limits
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
axis.title = element_text(size = 12)
)
# Create the plot for "No Pheromones"
plot_without <- ggplot(food_track_no, aes(x = after_nr_steps, y = remaining_food, group = run)) +
geom_line(color = "#ff7f0e") +  # Orange line for "No Pheromones"
theme_minimal() +
labs(title = "Remaining Food Over Time (No Pheromones)",
x = "Time Steps (After Every 100 Steps)",
y = "Remaining Food") +
scale_x_continuous(limits = c(0, max_steps)) +  # Set the x-axis limits
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
axis.title = element_text(size = 12)
)
# Arrange the two plots side by side
grid.arrange(plot_with, plot_without, ncol = 2)
# Create the plot for "With Pheromones"
plot_with <- ggplot(food_track_with, aes(x = after_nr_steps, y = remaining_food, group = run)) +
geom_line(color = "#1f77b4") +
theme_minimal() +
labs(title = NULL,
x = "Number of steps taken by all ants",
y = "Remaining food in arena") +
scale_x_continuous(limits = c(0, max_steps)) +
theme(
axis.title = element_text(size = 12)
)
# Create the plot for "No Pheromones"
plot_without <- ggplot(food_track_no, aes(x = after_nr_steps, y = remaining_food, group = run)) +
geom_line(color = "#ff7f0e") +
theme_minimal() +
labs(title = NULL,
x = "Number of steps taken by all ants",
y = "Remaining food in arena") +
scale_x_continuous(limits = c(0, max_steps)) +
theme(
axis.title = element_text(size = 12)
)
# Create a main title
main_title <- textGrob("Remaining food after every 100 steps in the simulation", gp = gpar(fontsize = 16, fontface = "bold"))
library(gridExtra)
library(grid)
# Create the plot for "With Pheromones"
plot_with <- ggplot(food_track_with, aes(x = after_nr_steps, y = remaining_food, group = run)) +
geom_line(color = "#1f77b4") +
theme_minimal() +
labs(title = NULL,
x = "Number of steps taken by all ants",
y = "Remaining food in arena") +
scale_x_continuous(limits = c(0, max_steps)) +
theme(
axis.title = element_text(size = 12)
)
# Create the plot for "No Pheromones"
plot_without <- ggplot(food_track_no, aes(x = after_nr_steps, y = remaining_food, group = run)) +
geom_line(color = "#ff7f0e") +
theme_minimal() +
labs(title = NULL,
x = "Number of steps taken by all ants",
y = "Remaining food in arena") +
scale_x_continuous(limits = c(0, max_steps)) +
theme(
axis.title = element_text(size = 12)
)
# Create a main title
main_title <- textGrob("Remaining food after every 100 steps in the simulation", gp = gpar(fontsize = 16, fontface = "bold"))
# Create subtitles
subtitle_with <- textGrob("With pheromone trails", gp = gpar(fontsize = 14, fontface = "italic"))
subtitle_without <- textGrob("Without pheromone trails", gp = gpar(fontsize = 14, fontface = "italic"))
# Arrange the plots side by side with the titles
grid.arrange(
main_title,
arrangeGrob(subtitle_with, plot_with, ncol = 1),
arrangeGrob(subtitle_without, plot_without, ncol = 1),
nrow = 3,
heights = c(1, 6, 6)  # Adjust the relative height for the titles and plots
)
# Load the datasets
food_track_with <- read.csv('food_tracking_with_pheromones.csv')
food_track_no <- read.csv('food_tracking_no_pheromones.csv')
head(food_track_no)
head(food_track_with)
# Add a column to identify the condition (with or without pheromones)
food_track_with$condition <- "With pheromones"
food_track_no$condition <- "No pheromones"
# Determine the x-axis limits (based on the maximum number of steps in either dataset)
max_steps <- max(max(food_track_with$after_nr_steps), max(food_track_no$after_nr_steps))
# Create the plot for "With Pheromones"
plot_with <- ggplot(food_track_with, aes(x = after_nr_steps, y = remaining_food, group = run)) +
geom_line(color = "#1f77b4") +
theme_minimal() +
labs(title = NULL,
x = "Number of steps taken by all ants",
y = "Remaining food in arena") +
scale_x_continuous(limits = c(0, max_steps)) +
theme(
axis.title = element_text(size = 12)
)
# Create the plot for "No Pheromones"
plot_without <- ggplot(food_track_no, aes(x = after_nr_steps, y = remaining_food, group = run)) +
geom_line(color = "#ff7f0e") +
theme_minimal() +
labs(title = NULL,
x = "Number of steps taken by all ants",
y = "Remaining food in arena") +
scale_x_continuous(limits = c(0, max_steps)) +
theme(
axis.title = element_text(size = 12)
)
# Create a main title
main_title <- textGrob("Remaining Food After Every 100 Steps in the Simulation", gp = gpar(fontsize = 16, fontface = "bold"))
# Create subtitles
subtitle_with <- textGrob("With Pheromone Trails", gp = gpar(fontsize = 14, fontface = "italic"))
subtitle_without <- textGrob("Without Pheromone Trails", gp = gpar(fontsize = 14, fontface = "italic"))
# Arrange the plots side by side with the titles
grid.arrange(
main_title,
arrangeGrob(subtitle_with, plot_with, ncol = 1),
arrangeGrob(subtitle_without, plot_without, ncol = 1),
ncol = 2,  # Arrange side by side (2 columns)
heights = c(1, 6),  # Adjust the height for the main title and plots
widths = c(1, 1)  # Equal width for both plots
)
# Load the datasets
food_track_with <- read.csv('food_tracking_with_pheromones.csv')
food_track_no <- read.csv('food_tracking_no_pheromones.csv')
head(food_track_no)
head(food_track_with)
# Add a column to identify the condition (with or without pheromones)
food_track_with$condition <- "With pheromones"
food_track_no$condition <- "No pheromones"
# Determine the x-axis limits (based on the maximum number of steps in either dataset)
max_steps <- max(max(food_track_with$after_nr_steps), max(food_track_no$after_nr_steps))
# Create the plot for "With Pheromones"
plot_with <- ggplot(food_track_with, aes(x = after_nr_steps, y = remaining_food, group = run)) +
geom_line(color = "#1f77b4") +
theme_minimal() +
labs(title = NULL,
x = "Number of steps taken by all ants",
y = "Remaining food in arena") +
scale_x_continuous(limits = c(0, max_steps)) +
theme(
axis.title = element_text(size = 12)
)
# Create the plot for "No Pheromones"
plot_without <- ggplot(food_track_no, aes(x = after_nr_steps, y = remaining_food, group = run)) +
geom_line(color = "#ff7f0e") +
theme_minimal() +
labs(title = NULL,
x = "Number of steps taken by all ants",
y = "Remaining food in arena") +
scale_x_continuous(limits = c(0, max_steps)) +
theme(
axis.title = element_text(size = 12)
)
# Create a main title
main_title <- textGrob("Remaining food after every 100 steps in the simulation", gp = gpar(fontsize = 16, fontface = "bold"))
# Create subtitles
subtitle_with <- textGrob("With pheromone trails", gp = gpar(fontsize = 14, fontface = "italic"))
subtitle_without <- textGrob("Without pheromone trails", gp = gpar(fontsize = 14, fontface = "italic"))
# Arrange the plots side by side with the titles
grid.arrange(
main_title,
arrangeGrob(subtitle_with, plot_with, ncol = 1),
arrangeGrob(subtitle_without, plot_without, ncol = 1),
ncol = 2,  # Arrange side by side (2 columns)
layout_matrix = rbind(c(1, 1), c(2, 3))  # Place the main title in one row, and the plots in the next
)
# Load the datasets
food_track_with <- read.csv('food_tracking_with_pheromones.csv')
food_track_no <- read.csv('food_tracking_no_pheromones.csv')
# Add a column to identify the condition (with or without pheromones)
food_track_with$condition <- "With pheromones"
food_track_no$condition <- "No pheromones"
# Combine both datasets into one for faceting
food_track_all <- rbind(food_track_with, food_track_no)
# Determine the x-axis limits (based on the maximum number of steps in either dataset)
max_steps <- max(max(food_track_with$after_nr_steps), max(food_track_no$after_nr_steps))
# Create the plot
plot <- ggplot(food_track_all, aes(x = after_nr_steps, y = remaining_food, group = run)) +
geom_line(aes(color = condition)) +  # Different colors for different conditions
theme_minimal() +
labs(
x = "Number of steps taken by all ants",
y = "Remaining food in arena"
) +
scale_x_continuous(limits = c(0, max_steps)) +
theme(
axis.title = element_text(size = 12),
legend.position = "none"  # Remove the legend for cleaner look
) +
facet_wrap(~condition, scales = "free_y", ncol = 2, labeller = label_value)  # Facet the plots by condition
# Print the plot
print(plot)
-
-
# Create the plot
plot <- ggplot(food_track_all, aes(x = after_nr_steps, y = remaining_food, group = run)) +
geom_line(aes(color = condition)) +  # Different colors for different conditions
theme_minimal() +
labs(
x = "Number of steps taken by all ants",
y = "Remaining food in arena"
) +
scale_x_continuous(limits = c(0, max_steps)) +
theme(
axis.title = element_text(size = 12),
legend.position = "none"  # Remove the legend for cleaner look
) +
theme_bw() +
facet_wrap(~condition, scales = "free_y", ncol = 2, labeller = label_value)  # Facet the plots by condition
# Create the plot
plot <- ggplot(food_track_all, aes(x = after_nr_steps, y = remaining_food, group = run)) +
geom_line(aes(color = condition)) +  # Different colors for different conditions
theme_minimal() +
labs(
x = "Number of steps taken by all ants",
y = "Remaining food in arena"
) +
scale_x_continuous(limits = c(0, max_steps)) +
theme(
axis.title = element_text(size = 12),
legend.position = "none"  # Remove the legend for cleaner look
) +
theme_bw() +
facet_wrap(~condition, scales = "free_y", ncol = 2, labeller = label_value)  # Facet the plots by condition
# Print the plot
print(plot)
# Load the datasets
food_track_with <- read.csv('food_tracking_with_pheromones.csv')
food_track_no <- read.csv('food_tracking_no_pheromones.csv')
# Add a column to identify the condition (with or without pheromones)
food_track_with$condition <- "With pheromone trails"
food_track_no$condition <- "Without pheromone trails"
# Combine both datasets into one for faceting
food_track_all <- rbind(food_track_with, food_track_no)
# Determine the x-axis limits (based on the maximum number of steps in either dataset)
max_steps <- max(max(food_track_with$after_nr_steps), max(food_track_no$after_nr_steps))
# Create the plot
plot <- ggplot(food_track_all, aes(x = after_nr_steps, y = remaining_food, group = run)) +
geom_line(aes(color = condition)) +  # Different colors for different conditions
theme_minimal() +
labs(
x = "Number of steps taken by all ants",
y = "Remaining food in arena"
) +
scale_x_continuous(limits = c(0, max_steps)) +
theme(
axis.title = element_text(size = 12),
legend.position = "none"  # Remove the legend for cleaner look
) +
theme_bw() +
facet_wrap(~condition, scales = "free_y", ncol = 2, labeller = label_value) +
guides(color = "none")
print(plot)
# Create the plot
plot <- ggplot(food_track_all, aes(x = after_nr_steps, y = remaining_food, group = run)) +
geom_line(aes(color = condition)) +  # Different colors for different conditions
theme_minimal() +
labs(
x = "Number of steps taken by all ants",
y = "Remaining food in arena"
) +
scale_x_continuous(limits = c(0, max_steps)) +
theme(
axis.title = element_text(size = 12),
legend.position = "none",
strip.text = element_text(size = 12)
) +
theme_bw() +
facet_wrap(~condition, scales = "free_y", ncol = 2, labeller = label_value) +
guides(color = "none")
print(plot)
# Create the plot
plot <- ggplot(food_track_all, aes(x = after_nr_steps, y = remaining_food, group = run)) +
geom_line(aes(color = condition)) +  # Different colors for different conditions
theme_minimal() +
labs(
x = "Number of steps taken by all ants",
y = "Remaining food in arena"
) +
scale_x_continuous(limits = c(0, max_steps)) +
theme(
axis.title = element_text(size = 14),
legend.position = "none",
strip.text = element_text(size = 14)
) +
theme_bw() +
facet_wrap(~condition, scales = "free_y", ncol = 2, labeller = label_value) +
guides(color = "none")
print(plot)
# Create the plot
plot <- ggplot(food_track_all, aes(x = after_nr_steps, y = remaining_food, group = run)) +
geom_line(aes(color = condition)) +  # Different colors for different conditions
theme_minimal() +
labs(
x = "Number of steps taken by all ants",
y = "Remaining food in arena"
) +
scale_x_continuous(limits = c(0, max_steps)) +
theme(
axis.title = element_text(size = 14),
legend.position = "none",
strip.text = element_text(size = 20)
) +
theme_bw() +
facet_wrap(~condition, scales = "free_y", ncol = 2, labeller = label_value) +
guides(color = "none")
print(plot)
# Create the plot
plot <- ggplot(food_track_all, aes(x = after_nr_steps, y = remaining_food, group = run)) +
geom_line(aes(color = condition)) +  # Different colors for different conditions
theme_minimal() +
labs(
x = "Number of steps taken by all ants",
y = "Remaining food in arena"
) +
scale_x_continuous(limits = c(0, max_steps)) +
theme(
axis.title = element_text(size = 14),  # Set axis title size
legend.position = "none",  # Remove legend
strip.text = element_text(size = 14)  # Set facet title size (for condition)
) +
facet_wrap(~condition, scales = "free_y", ncol = 2) +  # Facet by condition
guides(color = "none")  # Remove color legend
# Print the plot
print(plot)
# Create the plot
plot <- ggplot(food_track_all, aes(x = after_nr_steps, y = remaining_food, group = run)) +
geom_line(aes(color = condition)) +
theme_minimal() +
labs(
x = "Number of steps taken by all ants",
y = "Remaining food in arena"
) +
scale_x_continuous(limits = c(0, max_steps)) +
theme(
axis.title = element_text(size = 12),
legend.position = "none"
) +
theme_bw() +
facet_wrap(~condition, scales = "free_y", ncol = 2, labeller = label_value) +
guides(color = "none")
print(plot)
