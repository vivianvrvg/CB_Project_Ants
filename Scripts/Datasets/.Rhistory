scale_fill_manual(values = c(
"with_pheromones" = "#1f77b4",
"no_pheromones" = "#ff7f0e"
)) +  # Set custom colors
theme_bw() +
labs(y = "Total steps until food depletion") +
theme(
legend.position = "none",                      # Remove legend
plot.title = element_blank(),                  # Remove title
axis.title.x = element_blank(),                # Remove x-axis label
axis.title.y = element_text(size = 14),        # Keep and enlarge y-axis label
axis.text = element_text(size = 12),           # Enlarge axis tick values
strip.text = element_text(size = 14, face = "bold")  # Enlarge facet condition labels
)
print(boxplot_final)
boxplot_final <- ggplot(grid50, aes(x = group, y = total_steps, fill = group)) +
geom_boxplot(alpha = 0.6, outlier.shape = NA) +  # Boxplot without outliers
geom_jitter(width = 0.2, alpha = 0.6, color = "black") +  # Jittered data points
geom_errorbar(
data = plot_summary,
aes(
x = group,
ymin = mean_total_steps - se_total_steps,
ymax = mean_total_steps + se_total_steps
),
inherit.aes = FALSE,  # Ensure it doesn't inherit aesthetics from the global ggplot call
width = 0.2, color = "black"
) +  # Error bars
geom_point(
data = plot_summary,
aes(x = group, y = mean_total_steps),
inherit.aes = FALSE,  # Prevent inherited aesthetics
shape = 23, size = 3, fill = "white"
) +  # Mean points
scale_x_discrete(labels = c(
"with_pheromones" = "With pheromone trails",
"no_pheromones" = "Without pheromone trails"
)) +  # Rename x-axis categories
scale_fill_manual(values = c(
"with_pheromones" = "#1f77b4",
"no_pheromones" = "#ff7f0e"
)) +  # Set custom colors
theme_bw() +
labs(y = "Total steps until food depletion") +
theme(
legend.position = "none",                      # Remove legend
plot.title = element_blank(),                  # Remove title
axis.title.x = element_blank(),                # Remove x-axis label
axis.title.y = element_text(size = 14),        # Keep and enlarge y-axis label
axis.text = element_text(size = 12),           # Enlarge axis tick values
strip.text = element_text(size = 16)  # Enlarge facet condition labels
)
print(boxplot_final)
4, face = "bold"
4, face = "bold"
boxplot_final <- ggplot(grid50, aes(x = group, y = total_steps, fill = group)) +
geom_boxplot(alpha = 0.6, outlier.shape = NA) +  # Boxplot without outliers
geom_jitter(width = 0.2, alpha = 0.6, color = "black") +  # Jittered data points
geom_errorbar(
data = plot_summary,
aes(
x = group,
ymin = mean_total_steps - se_total_steps,
ymax = mean_total_steps + se_total_steps
),
inherit.aes = FALSE,  # Ensure it doesn't inherit aesthetics from the global ggplot call
width = 0.2, color = "black"
) +  # Error bars
geom_point(
data = plot_summary,
aes(x = group, y = mean_total_steps),
inherit.aes = FALSE,  # Prevent inherited aesthetics
shape = 23, size = 3, fill = "white"
) +  # Mean points
scale_x_discrete(labels = c(
"with_pheromones" = "With pheromone trails",
"no_pheromones" = "Without pheromone trails"
)) +  # Rename x-axis categories
scale_fill_manual(values = c(
"with_pheromones" = "#1f77b4",
"no_pheromones" = "#ff7f0e"
)) +  # Set custom colors
theme_bw() +
labs(y = "Total steps until food depletion") +
theme(
legend.position = "none",                      # Remove legend
plot.title = element_blank(),                  # Remove title
axis.title.x = element_blank(),                # Remove x-axis label
axis.title.y = element_text(size = 14),        # Keep and enlarge y-axis label
axis.text = element_text(size = 12),           # Enlarge axis tick values
strip.text = element_text(size = 14, face = "bold")  # Enlarge facet condition labels
)
print(boxplot_final)
boxplot_final <- ggplot(grid50, aes(x = group, y = total_steps, fill = group)) +
geom_boxplot(alpha = 0.6, outlier.shape = NA) +  # Boxplot without outliers
geom_jitter(width = 0.2, alpha = 0.6, color = "black") +  # Jittered data points
geom_errorbar(
data = plot_summary,
aes(
x = group,
ymin = mean_total_steps - se_total_steps,
ymax = mean_total_steps + se_total_steps
),
inherit.aes = FALSE,  # Ensure it doesn't inherit aesthetics from the global ggplot call
width = 0.2, color = "black"
) +  # Error bars
geom_point(
data = plot_summary,
aes(x = group, y = mean_total_steps),
inherit.aes = FALSE,  # Prevent inherited aesthetics
shape = 23, size = 3, fill = "white"
) +  # Mean points
scale_x_discrete(labels = c(
"with_pheromones" = "With pheromone trails",
"no_pheromones" = "Without pheromone trails"
)) +  # Rename x-axis categories
scale_fill_manual(values = c(
"with_pheromones" = "#1f77b4",
"no_pheromones" = "#ff7f0e"
)) +  # Set custom colors
theme_bw() +
labs(y = "Total steps until food depletion") +
theme(
legend.position = "none",                      # Remove legend
plot.title = element_blank(),                  # Remove title
axis.title.x = element_blank(),                # Remove x-axis label
axis.title.y = element_text(size = 14),        # Keep and enlarge y-axis label
axis.text = element_text(size = 12),           # Enlarge axis tick values
strip.text = element_text(size = 16, face = "bold")  # Enlarge facet condition labels
)
print(boxplot_final)
4
4
boxplot_final <- ggplot(grid50, aes(x = group, y = total_steps, fill = group)) +
geom_boxplot(alpha = 0.6, outlier.shape = NA) +  # Boxplot without outliers
geom_jitter(width = 0.2, alpha = 0.6, color = "black") +  # Jittered data points
geom_errorbar(
data = plot_summary,
aes(
x = group,
ymin = mean_total_steps - se_total_steps,
ymax = mean_total_steps + se_total_steps
),
inherit.aes = FALSE,  # Ensure it doesn't inherit aesthetics from the global ggplot call
width = 0.2, color = "black"
) +  # Error bars
geom_point(
data = plot_summary,
aes(x = group, y = mean_total_steps),
inherit.aes = FALSE,  # Prevent inherited aesthetics
shape = 23, size = 3, fill = "white"
) +  # Mean points
scale_x_discrete(labels = c(
"with_pheromones" = "With pheromone trails",
"no_pheromones" = "Without pheromone trails"
)) +  # Rename x-axis categories
scale_fill_manual(values = c(
"with_pheromones" = "#1f77b4",
"no_pheromones" = "#ff7f0e"
)) +  # Set custom colors
theme_bw() +
labs(y = "Total steps until food depletion") +
theme(
legend.position = "none",                      # Remove legend
plot.title = element_blank(),                  # Remove title
axis.title.x = element_blank(),                # Remove x-axis label
axis.title.y = element_text(size = 14),        # Keep and enlarge y-axis label
axis.text = element_text(size = 12),           # Enlarge axis tick values
strip.text = element_text(size = 14, face = "bold")  # Enlarge facet condition labels
)
print(boxplot_final)
summary_stats <- grid50 %>%
group_by(group) %>%
summarise(
count = n(),
mean_total_steps = mean(total_steps, na.rm = TRUE),
sd_total_steps = sd(total_steps, na.rm = TRUE),
median_total_steps = median(total_steps, na.rm = TRUE),
IQR_total_steps = IQR(total_steps, na.rm = TRUE),
se_total_steps = sd(total_steps, na.rm = TRUE) / sqrt(count)
)
print(summary_stats)
boxplot_final <- ggplot(grid50, aes(x = group, y = total_steps, fill = group)) +
geom_boxplot(alpha = 0.6, outlier.shape = NA) +  # Boxplot without outliers
geom_jitter(width = 0.2, alpha = 0.6, color = "black") +  # Jittered data points
geom_errorbar(
data = plot_summary,
aes(
x = group,
ymin = mean_total_steps - se_total_steps,
ymax = mean_total_steps + se_total_steps
),
inherit.aes = FALSE,  # Ensure it doesn't inherit aesthetics from the global ggplot call
width = 0.2, color = "black"
) +  # Error bars
geom_point(
data = plot_summary,
aes(x = group, y = mean_total_steps),
inherit.aes = FALSE,  # Prevent inherited aesthetics
shape = 23, size = 3, fill = "white"
) +  # Mean points
scale_x_discrete(labels = c(
"with_pheromones" = "With pheromone trails",
"no_pheromones" = "Without pheromone trails"
)) +  # Rename x-axis categories
scale_fill_manual(values = c(
"with_pheromones" = "#1f77b4",
"no_pheromones" = "#ff7f0e"
)) +  # Set custom colors
theme_bw() +
labs(y = "Total steps until food depletion") +
theme(
legend.position = "none",                      # Remove legend
plot.title = element_blank(),                  # Remove title
axis.title.x = element_blank(),                # Remove x-axis label
axis.title.y = element_text(size = 14),        # Keep and enlarge y-axis label
axis.text = element_text(size = 12),           # Enlarge axis tick values
strip.text = element_text(size = 14, face = "bold")  # Enlarge facet condition labels
)
print(boxplot_final)
summary_stats_grid50 <- grid50 %>%
group_by(group) %>%
summarise(
count = n(),
mean_total_steps = mean(total_steps, na.rm = TRUE),
sd_total_steps = sd(total_steps, na.rm = TRUE),
median_total_steps = median(total_steps, na.rm = TRUE),
IQR_total_steps = IQR(total_steps, na.rm = TRUE),
se_total_steps = sd(total_steps, na.rm = TRUE) / sqrt(count)
)
print(summary_stats_grid50)
plot_summary_grid50 <- summary_stats_grid50
print(plot_summary_grid50)
boxplot_final <- ggplot(grid50, aes(x = group, y = total_steps, fill = group)) +
geom_boxplot(alpha = 0.6, outlier.shape = NA) +  # Boxplot without outliers
geom_jitter(width = 0.2, alpha = 0.6, color = "black") +  # Jittered data points
geom_errorbar(
data = plot_summary_grid50,
aes(
x = group,
ymin = mean_total_steps - se_total_steps,
ymax = mean_total_steps + se_total_steps
),
inherit.aes = FALSE,  # Ensure it doesn't inherit aesthetics from the global ggplot call
width = 0.2, color = "black"
) +  # Error bars
geom_point(
data = plot_summary,
aes(x = group, y = mean_total_steps),
inherit.aes = FALSE,  # Prevent inherited aesthetics
shape = 23, size = 3, fill = "white"
) +  # Mean points
scale_x_discrete(labels = c(
"with_pheromones" = "With pheromone trails",
"no_pheromones" = "Without pheromone trails"
)) +  # Rename x-axis categories
scale_fill_manual(values = c(
"with_pheromones" = "#1f77b4",
"no_pheromones" = "#ff7f0e"
)) +  # Set custom colors
theme_bw() +
labs(y = "Total steps until food depletion") +
theme(
legend.position = "none",                      # Remove legend
plot.title = element_blank(),                  # Remove title
axis.title.x = element_blank(),                # Remove x-axis label
axis.title.y = element_text(size = 14),        # Keep and enlarge y-axis label
axis.text = element_text(size = 12),           # Enlarge axis tick values
strip.text = element_text(size = 14, face = "bold")  # Enlarge facet condition labels
)
boxplot_final <- ggplot(grid50, aes(x = group, y = total_steps, fill = group)) +
geom_boxplot(alpha = 0.6, outlier.shape = NA) +  # Boxplot without outliers
geom_jitter(width = 0.2, alpha = 0.6, color = "black") +  # Jittered data points
geom_errorbar(
data = plot_summary_grid50,
aes(
x = group,
ymin = mean_total_steps - se_total_steps,
ymax = mean_total_steps + se_total_steps
),
inherit.aes = FALSE,  # Ensure it doesn't inherit aesthetics from the global ggplot call
width = 0.2, color = "black"
) +  # Error bars
geom_point(
data = plot_summary_grid50,
aes(x = group, y = mean_total_steps),
inherit.aes = FALSE,  # Prevent inherited aesthetics
shape = 23, size = 3, fill = "white"
) +  # Mean points
scale_x_discrete(labels = c(
"with_pheromones" = "With pheromone trails",
"no_pheromones" = "Without pheromone trails"
)) +  # Rename x-axis categories
scale_fill_manual(values = c(
"with_pheromones" = "#1f77b4",
"no_pheromones" = "#ff7f0e"
)) +  # Set custom colors
theme_bw() +
labs(y = "Total steps until food depletion") +
theme(
legend.position = "none",                      # Remove legend
plot.title = element_blank(),                  # Remove title
axis.title.x = element_blank(),                # Remove x-axis label
axis.title.y = element_text(size = 14),        # Keep and enlarge y-axis label
axis.text = element_text(size = 12),           # Enlarge axis tick values
strip.text = element_text(size = 14, face = "bold")  # Enlarge facet condition labels
)
print(boxplot_final)
summary_stats_ant50 <- ant50 %>%
group_by(group) %>%
summarise(
count = n(),
mean_total_steps = mean(total_steps, na.rm = TRUE),
sd_total_steps = sd(total_steps, na.rm = TRUE),
median_total_steps = median(total_steps, na.rm = TRUE),
IQR_total_steps = IQR(total_steps, na.rm = TRUE),
se_total_steps = sd(total_steps, na.rm = TRUE) / sqrt(count)
)
print(summary_stats_ant50)
plot_summary_ant50 <- summary_stats_ant50
print(plot_summary_ant50)
boxplot_final <- ggplot(ant50, aes(x = group, y = total_steps, fill = group)) +
geom_boxplot(alpha = 0.6, outlier.shape = NA) +  # Boxplot without outliers
geom_jitter(width = 0.2, alpha = 0.6, color = "black") +  # Jittered data points
geom_errorbar(
data = plot_summary_ant50,
aes(
x = group,
ymin = mean_total_steps - se_total_steps,
ymax = mean_total_steps + se_total_steps
),
inherit.aes = FALSE,  # Ensure it doesn't inherit aesthetics from the global ggplot call
width = 0.2, color = "black"
) +  # Error bars
geom_point(
data = plot_summary_ant50,
aes(x = group, y = mean_total_steps),
inherit.aes = FALSE,  # Prevent inherited aesthetics
shape = 23, size = 3, fill = "white"
) +  # Mean points
scale_x_discrete(labels = c(
"with_pheromones" = "With pheromone trails",
"no_pheromones" = "Without pheromone trails"
)) +  # Rename x-axis categories
scale_fill_manual(values = c(
"with_pheromones" = "#1f77b4",
"no_pheromones" = "#ff7f0e"
)) +  # Set custom colors
theme_bw() +
labs(y = "Total steps until food depletion") +
theme(
legend.position = "none",                      # Remove legend
plot.title = element_blank(),                  # Remove title
axis.title.x = element_blank(),                # Remove x-axis label
axis.title.y = element_text(size = 14),        # Keep and enlarge y-axis label
axis.text = element_text(size = 12),           # Enlarge axis tick values
strip.text = element_text(size = 14, face = "bold")  # Enlarge facet condition labels
)
print(boxplot_final)
boxplot_final_grid50 <- ggplot(grid50, aes(x = group, y = total_steps, fill = group)) +
geom_boxplot(alpha = 0.6, outlier.shape = NA) +  # Boxplot without outliers
geom_jitter(width = 0.2, alpha = 0.6, color = "black") +  # Jittered data points
geom_errorbar(
data = plot_summary_grid50,
aes(
x = group,
ymin = mean_total_steps - se_total_steps,
ymax = mean_total_steps + se_total_steps
),
inherit.aes = FALSE,  # Ensure it doesn't inherit aesthetics from the global ggplot call
width = 0.2, color = "black"
) +  # Error bars
geom_point(
data = plot_summary_grid50,
aes(x = group, y = mean_total_steps),
inherit.aes = FALSE,  # Prevent inherited aesthetics
shape = 23, size = 3, fill = "white"
) +  # Mean points
scale_x_discrete(labels = c(
"with_pheromones" = "With pheromone trails",
"no_pheromones" = "Without pheromone trails"
)) +  # Rename x-axis categories
scale_fill_manual(values = c(
"with_pheromones" = "#1f77b4",
"no_pheromones" = "#ff7f0e"
)) +  # Set custom colors
theme_bw() +
labs(y = "Total steps until food depletion") +
theme(
legend.position = "none",                      # Remove legend
plot.title = element_blank(),                  # Remove title
axis.title.x = element_blank(),                # Remove x-axis label
axis.title.y = element_text(size = 14),        # Keep and enlarge y-axis label
axis.text = element_text(size = 12),           # Enlarge axis tick values
strip.text = element_text(size = 14, face = "bold")  # Enlarge facet condition labels
)
print(boxplot_final_grid50)
boxplot_final_ant50 <- ggplot(ant50, aes(x = group, y = total_steps, fill = group)) +
geom_boxplot(alpha = 0.6, outlier.shape = NA) +  # Boxplot without outliers
geom_jitter(width = 0.2, alpha = 0.6, color = "black") +  # Jittered data points
geom_errorbar(
data = plot_summary_ant50,
aes(
x = group,
ymin = mean_total_steps - se_total_steps,
ymax = mean_total_steps + se_total_steps
),
inherit.aes = FALSE,  # Ensure it doesn't inherit aesthetics from the global ggplot call
width = 0.2, color = "black"
) +  # Error bars
geom_point(
data = plot_summary_ant50,
aes(x = group, y = mean_total_steps),
inherit.aes = FALSE,  # Prevent inherited aesthetics
shape = 23, size = 3, fill = "white"
) +  # Mean points
scale_x_discrete(labels = c(
"with_pheromones" = "With pheromone trails",
"no_pheromones" = "Without pheromone trails"
)) +  # Rename x-axis categories
scale_fill_manual(values = c(
"with_pheromones" = "#1f77b4",
"no_pheromones" = "#ff7f0e"
)) +  # Set custom colors
theme_bw() +
labs(y = "Total steps until food depletion") +
theme(
legend.position = "none",                      # Remove legend
plot.title = element_blank(),                  # Remove title
axis.title.x = element_blank(),                # Remove x-axis label
axis.title.y = element_text(size = 14),        # Keep and enlarge y-axis label
axis.text = element_text(size = 12),           # Enlarge axis tick values
strip.text = element_text(size = 14, face = "bold")  # Enlarge facet condition labels
)
print(boxplot_final_ant50)
summary_stats <- df %>%
group_by(group) %>%
summarise(
count = n(),
mean_total_steps = mean(total_steps, na.rm = TRUE),
sd_total_steps = sd(total_steps, na.rm = TRUE),
median_total_steps = median(total_steps, na.rm = TRUE),
IQR_total_steps = IQR(total_steps, na.rm = TRUE),
se_total_steps = sd(total_steps, na.rm = TRUE) / sqrt(count)
)
# Load data from CSV files
with_pheromones <- read.csv("ant_with_pheromones.csv")
no_pheromones <- read.csv("ant_no_pheromones.csv")
# Assign group labels
with_pheromones$group <- "with_pheromones"
no_pheromones$group <- "no_pheromones"
# Combine the datasets into one data frame
df <- rbind(with_pheromones, no_pheromones)
# View the first few rows to verify
head(df)
str(df)
print(colnames(df))
df$group <- factor(df$group, levels = c("with_pheromones", "no_pheromones"))
head(df)
str(df)
summary_stats <- df %>%
group_by(group) %>%
summarise(
count = n(),
mean_total_steps = mean(total_steps, na.rm = TRUE),
sd_total_steps = sd(total_steps, na.rm = TRUE),
median_total_steps = median(total_steps, na.rm = TRUE),
IQR_total_steps = IQR(total_steps, na.rm = TRUE),
se_total_steps = sd(total_steps, na.rm = TRUE) / sqrt(count)
)
print(summary_stats)
boxplot(grid50$total_steps ~ grid50$group, outline = TRUE)
plot_summary <- summary_stats
print(plot_summary)
boxplot_final <- ggplot(df, aes(x = group, y = total_steps, fill = group)) +
geom_boxplot(alpha = 0.6, outlier.shape = NA) +  # Boxplot without outliers
geom_jitter(width = 0.2, alpha = 0.6, color = "black") +  # Jittered data points
geom_errorbar(
data = plot_summary_ant50,
aes(
x = group,
ymin = mean_total_steps - se_total_steps,
ymax = mean_total_steps + se_total_steps
),
inherit.aes = FALSE,  # Ensure it doesn't inherit aesthetics from the global ggplot call
width = 0.2, color = "black"
) +  # Error bars
geom_point(
data = plot_summary_ant50,
aes(x = group, y = mean_total_steps),
inherit.aes = FALSE,  # Prevent inherited aesthetics
shape = 23, size = 3, fill = "white"
) +  # Mean points
scale_x_discrete(labels = c(
"with_pheromones" = "With pheromone trails",
"no_pheromones" = "Without pheromone trails"
)) +  # Rename x-axis categories
scale_fill_manual(values = c(
"with_pheromones" = "#1f77b4",
"no_pheromones" = "#ff7f0e"
)) +  # Set custom colors
theme_bw() +
labs(y = "Total steps until food depletion") +
theme(
legend.position = "none",                      # Remove legend
plot.title = element_blank(),                  # Remove title
axis.title.x = element_blank(),                # Remove x-axis label
axis.title.y = element_text(size = 14),        # Keep and enlarge y-axis label
axis.text = element_text(size = 12),           # Enlarge axis tick values
strip.text = element_text(size = 14, face = "bold")  # Enlarge facet condition labels
)
print(boxplot_final)
